#!/bin/sh
# Name : ScanPro
# Date : May 2022
# Description : ScanPro is a ScanPro Scan scripts for hacker's.
# Set up symbols
# |
dirty_synced="*"
unpushed="â–³"
dirty_unpushed="â–²"
unpulled="â–½"
dirty_unpulled="â–¼"
unpushed_unpulled="â¬¡"
dirty_unpushed_unpulled="â¬¢"
# |
nc="\033[00m"
white="\033[1;37m"
grey="\033[0;37m"
purple="\033[0;35m"
red="\033[1;31m"
green="\033[32m"
yellow="\033[33m"
purple="\033[0;35m"
cyan="\033[1;36m"
cafe="\033[1;33m"
fiuscha="\033[0;35m"
blue="\033[34m"
orange="\033[38;5;122m"
# |
RED="$(printf '\033[31m')"
GREEN="$(printf '\033[32m')"
ORANGE="$(printf '\033[33m')"
BLUE="$(printf '\033[34m')"
MAGENTA="$(printf '\033[35m')"
CYAN="$(printf '\033[36m')"
WHITE="$(printf '\033[37m')"
BLACK="$(printf '\033[30m')"
REDBG="$(printf '\033[41m')"
GREENBG="$(printf '\033[42m')"
ORANGEBG="$(printf '\033[43m')"
BLUEBG="$(printf '\033[44m')"
MAGENTABG="$(printf '\033[45m')"
CYANBG="$(printf '\033[46m')"
WHITEBG="$(printf '\033[47m')"
BLACKBG="$(printf '\033[40m')"
RESETBG="$(printf '\e[0m')"
BLINK="$(printf '\033[5;31m')"
# |
PromptFun(){
  echo ""
  echo "  ${orange}  â”Œâ”€â”€[${CYAN}Anlominus${purple}ðŸ‘½${red}Scan${BLUE}Pro$~${orange}]${cyan}"
  echo "  ${orange}  â””â”€â”€â•¼${green}"
}
prompt="$(PromptFun)"

prcscn(){
  clear
  echo "${yellow}\n[!] Scanning: ${cyan}${IP_TARGET}${yellow} [ Please Wait ]\n"
  echo
}


# echo " Enter Target Web/Host/IP: "
# read IP_TARGET; clear
# echo "\n [#] Your Target : $IP_TARGET"
# echo "\n [#] Starting Scanning \n"

echo ""
#echo " Enter Your Target IP (Like : 192.168.X.X) : "
echo "  |---------------------------------"
read -p  "  | What is your IP Target or Host: " host
echo "  |---------------------------------"
echo "  |"
echo "  |-------------------------------"
read -p  "  | Open Port on Target or Host:  " port
echo "  |-------------------------------"
echo ""
# Menu Contents
Menu(){
  while true; do
    clear
    #statements
    echo "\n${cyan}  |"
    echo "  |${cafe} [#] Basic Information"
    echo "${cyan}  |-----------------------------"
    echo "${cyan}  |${green} [!] Your Host Target is:${cafe} $host"
    echo "${cyan}  |${green} [!] Your Port Target is:${cafe} $port"
    echo "${cyan}  |-----------------------------"
    echo "${cyan}  |"
    #statements
    echo "\n  [#] ScanPro  ${cyan}"
    echo "      [1] Target Selection"
    echo "      [2] Port Selection"
    echo "      [3] Scan Types"
    echo "      [4] Service and Operating System Detection"
    echo "      [5] Output formats"
    echo "      [6] NSE Scripting"
    echo "      [7] HTTP info gathering"
    echo "      ${prompt}"
    read cmd
    case ${cmd} in
      1)
      nts
      ;;
      2)
      nps
      ;;
      3)
      npst
      ;;
      4)
      soad
      ;;
      5)
      nof
      ;;
      6)
      ddwns
      ;;
      7)
      hsi
      ;;
      x)
      clear
      exit
      ;;
    esac
  done
}
#1 Nmap Target Selectio
nts(){
  while true; do
    #statements
    clear
    echo ""
    echo "${cafe} [#] Nmap Target Selection ${cyan}"
    echo ""
    echo "     [1] Scan a single IP	nmap 192.168.1.1"
    echo "     [2] Scan a host	nmap www.testhostname.com"
    echo "     [3] Scan a range of IPs	nmap 192.168.1.1-20"
    echo "     [4] Scan a subnet	nmap 192.168.1.0/24"
    echo "     [5] Scan targets from a text file	nmap -iL list-of-ips.txt"
    echo ""
    echo "      ${prompt}"
    read cmd
    case ${cmd} in
      1)
      nmap ${IP_TARGET}
      ;;
      2)
      nps
      ;;
      3)
      npst
      ;;
      4)
      soad
      ;;
      5)
      nof
      ;;
      6)
      ddwns
      ;;
      7)
      hsi
      ;;
      x)
      clear
      exit
      ;;
    esac
  done
}
#2 Nmap Port Selection
nps(){
echo ""
echo "${cafe} [#] Nmap Port Selection ${cyan}"
echo "     [1] Scan a single Port	nmap -p 22 192.168.1.1"
echo "     [2] Scan a range of ports	nmap -p 1-100 192.168.1.1"
echo "     [3] Scan 100 most common ports (Fast)	nmap -F 192.168.1.1"
echo "     [4] Scan all 65535 ports	nmap -p- 192.168.1.1"
echo ""
}
#3 Nmap Port Scan types
npst(){
echo ""
echo "${cafe} [#] Nmap Port Scan types ${cyan}"
echo "     [1] Scan using TCP connect	nmap -sT 192.168.1.1"
echo "     [2] Scan using TCP SYN scan (default)	nmap -sS 192.168.1.1"
echo "     [3] Scan UDP ports	nmap -sU -p 123,161,162 192.168.1.1"
echo "     [4] Scan selected ports - ignore discovery	nmap -Pn -F 192.168.1.1"
echo ""
}
#4 Service and OS Detection
saod(){
echo ""
echo "${cafe} [#] Service and OS Detection ${cyan}"
echo "     [1] Detect OS and Services	nmap -A 192.168.1.1"
echo "     [2] Standard service detection	nmap -sV 192.168.1.1"
echo "     [3] More aggressive Service Detection	nmap -sV --version-intensity 5 192.168.1.1"
echo "     [4] Lighter banner grabbing detection	nmap -sV --version-intensity 0 192.168.1.1"
echo ""
}
#5 Nmap Output Formats
nof(){
echo ""
echo "${cafe} [#] Nmap Output Formats ${cyan}"
echo "     [1] Save default output to file	nmap -oN outputfile.txt 192.168.1.1"
echo "     [2] Save results as XML	nmap -oX outputfile.xml 192.168.1.1"
echo "     [3] Save results in a format for grep	nmap -oG outputfile.txt 192.168.1.1"
echo "     [4] Save in all formats	nmap -oA outputfile 192.168.1.1"
echo ""
}
#6 Digging deeper with NSE Scripts
ddwns(){
echo ""
echo "${cafe} [#] Digging deeper with NSE Scripts ${cyan}"
echo "     [1] Scan using default safe scripts	nmap -sV -sC 192.168.1.1"
echo "     [2] Get help for a script	nmap --script-help=ssl-heartbleed"
echo "     [3] Scan using a specific NSE script	nmap -sV -p 443 â€“script=ssl-heartbleed.nse 192.168.1.1"
echo "     [4] Scan with a set of scripts	nmap -sV --script=smb* 192.168.1.1"
echo ""
}
#7 HTTP Service Information
hsi(){
echo ""
echo "${cafe} [#] HTTP Service Information ${cyan}"
echo "     [1] Gather page titles from HTTP services	nmap --script=http-title 192.168.1.0/24"
echo "     [2] Get HTTP headers of web services	nmap --script=http-headers 192.168.1.0/24"
echo "     [3] Find web apps from known paths	nmap --script=http-enum 192.168.1.0/24"
echo ""
}

Menu
